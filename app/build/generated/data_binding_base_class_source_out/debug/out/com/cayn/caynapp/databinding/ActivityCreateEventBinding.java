// Generated by view binder compiler. Do not edit!
package com.cayn.caynapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cayn.caynapp.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button btnAceptar;

  @NonNull
  public final ImageButton btnBackModal;

  @NonNull
  public final Button btnCancelar;

  @NonNull
  public final ImageButton btnGoBack;

  @NonNull
  public final TextView btnHoraFinal;

  @NonNull
  public final TextView btnHoraInicial;

  @NonNull
  public final Button btnPrincipalEvento;

  @NonNull
  public final DatePicker dpFechaFinal;

  @NonNull
  public final DatePicker dpFechaInicial;

  @NonNull
  public final TextInputEditText etDescripcion;

  @NonNull
  public final TextInputEditText etNombreEvento;

  @NonNull
  public final ImageButton ibCerrarModal;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final LinearLayout linearLayout7;

  @NonNull
  public final LinearLayout llFechaFinal;

  @NonNull
  public final LinearLayout llFechaInicial;

  @NonNull
  public final LinearLayout llHoraFinal;

  @NonNull
  public final LinearLayout llHoraInicial;

  @NonNull
  public final LinearLayout llTipoEvento;

  @NonNull
  public final Switch swTipoEvento;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TimePicker tpHoraFinal;

  @NonNull
  public final TimePicker tpHoraInicial;

  @NonNull
  public final TextView tvFechaEventoFinal;

  @NonNull
  public final TextView tvFechaEventoInicial;

  @NonNull
  public final TextView tvHeaderText;

  @NonNull
  public final TextView tvTextoModalConfirmacion;

  private ActivityCreateEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button btnAceptar,
      @NonNull ImageButton btnBackModal, @NonNull Button btnCancelar,
      @NonNull ImageButton btnGoBack, @NonNull TextView btnHoraFinal,
      @NonNull TextView btnHoraInicial, @NonNull Button btnPrincipalEvento,
      @NonNull DatePicker dpFechaFinal, @NonNull DatePicker dpFechaInicial,
      @NonNull TextInputEditText etDescripcion, @NonNull TextInputEditText etNombreEvento,
      @NonNull ImageButton ibCerrarModal, @NonNull LinearLayout linearLayout4,
      @NonNull LinearLayout linearLayout6, @NonNull LinearLayout linearLayout7,
      @NonNull LinearLayout llFechaFinal, @NonNull LinearLayout llFechaInicial,
      @NonNull LinearLayout llHoraFinal, @NonNull LinearLayout llHoraInicial,
      @NonNull LinearLayout llTipoEvento, @NonNull Switch swTipoEvento, @NonNull Toolbar toolbar,
      @NonNull TimePicker tpHoraFinal, @NonNull TimePicker tpHoraInicial,
      @NonNull TextView tvFechaEventoFinal, @NonNull TextView tvFechaEventoInicial,
      @NonNull TextView tvHeaderText, @NonNull TextView tvTextoModalConfirmacion) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnAceptar = btnAceptar;
    this.btnBackModal = btnBackModal;
    this.btnCancelar = btnCancelar;
    this.btnGoBack = btnGoBack;
    this.btnHoraFinal = btnHoraFinal;
    this.btnHoraInicial = btnHoraInicial;
    this.btnPrincipalEvento = btnPrincipalEvento;
    this.dpFechaFinal = dpFechaFinal;
    this.dpFechaInicial = dpFechaInicial;
    this.etDescripcion = etDescripcion;
    this.etNombreEvento = etNombreEvento;
    this.ibCerrarModal = ibCerrarModal;
    this.linearLayout4 = linearLayout4;
    this.linearLayout6 = linearLayout6;
    this.linearLayout7 = linearLayout7;
    this.llFechaFinal = llFechaFinal;
    this.llFechaInicial = llFechaInicial;
    this.llHoraFinal = llHoraFinal;
    this.llHoraInicial = llHoraInicial;
    this.llTipoEvento = llTipoEvento;
    this.swTipoEvento = swTipoEvento;
    this.toolbar = toolbar;
    this.tpHoraFinal = tpHoraFinal;
    this.tpHoraInicial = tpHoraInicial;
    this.tvFechaEventoFinal = tvFechaEventoFinal;
    this.tvFechaEventoInicial = tvFechaEventoInicial;
    this.tvHeaderText = tvHeaderText;
    this.tvTextoModalConfirmacion = tvTextoModalConfirmacion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btn_aceptar;
      Button btnAceptar = ViewBindings.findChildViewById(rootView, id);
      if (btnAceptar == null) {
        break missingId;
      }

      id = R.id.btn_back_modal;
      ImageButton btnBackModal = ViewBindings.findChildViewById(rootView, id);
      if (btnBackModal == null) {
        break missingId;
      }

      id = R.id.btn_cancelar;
      Button btnCancelar = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelar == null) {
        break missingId;
      }

      id = R.id.btn_go_back;
      ImageButton btnGoBack = ViewBindings.findChildViewById(rootView, id);
      if (btnGoBack == null) {
        break missingId;
      }

      id = R.id.btn_hora_final;
      TextView btnHoraFinal = ViewBindings.findChildViewById(rootView, id);
      if (btnHoraFinal == null) {
        break missingId;
      }

      id = R.id.btn_hora_inicial;
      TextView btnHoraInicial = ViewBindings.findChildViewById(rootView, id);
      if (btnHoraInicial == null) {
        break missingId;
      }

      id = R.id.btn_principal_evento;
      Button btnPrincipalEvento = ViewBindings.findChildViewById(rootView, id);
      if (btnPrincipalEvento == null) {
        break missingId;
      }

      id = R.id.dp_fecha_final;
      DatePicker dpFechaFinal = ViewBindings.findChildViewById(rootView, id);
      if (dpFechaFinal == null) {
        break missingId;
      }

      id = R.id.dp_fecha_inicial;
      DatePicker dpFechaInicial = ViewBindings.findChildViewById(rootView, id);
      if (dpFechaInicial == null) {
        break missingId;
      }

      id = R.id.et_descripcion;
      TextInputEditText etDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (etDescripcion == null) {
        break missingId;
      }

      id = R.id.et_nombre_evento;
      TextInputEditText etNombreEvento = ViewBindings.findChildViewById(rootView, id);
      if (etNombreEvento == null) {
        break missingId;
      }

      id = R.id.ib_cerrar_modal;
      ImageButton ibCerrarModal = ViewBindings.findChildViewById(rootView, id);
      if (ibCerrarModal == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.linearLayout7;
      LinearLayout linearLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout7 == null) {
        break missingId;
      }

      id = R.id.ll_fecha_final;
      LinearLayout llFechaFinal = ViewBindings.findChildViewById(rootView, id);
      if (llFechaFinal == null) {
        break missingId;
      }

      id = R.id.ll_fecha_inicial;
      LinearLayout llFechaInicial = ViewBindings.findChildViewById(rootView, id);
      if (llFechaInicial == null) {
        break missingId;
      }

      id = R.id.ll_hora_final;
      LinearLayout llHoraFinal = ViewBindings.findChildViewById(rootView, id);
      if (llHoraFinal == null) {
        break missingId;
      }

      id = R.id.ll_hora_inicial;
      LinearLayout llHoraInicial = ViewBindings.findChildViewById(rootView, id);
      if (llHoraInicial == null) {
        break missingId;
      }

      id = R.id.ll_tipo_evento;
      LinearLayout llTipoEvento = ViewBindings.findChildViewById(rootView, id);
      if (llTipoEvento == null) {
        break missingId;
      }

      id = R.id.sw_tipo_evento;
      Switch swTipoEvento = ViewBindings.findChildViewById(rootView, id);
      if (swTipoEvento == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tp_hora_final;
      TimePicker tpHoraFinal = ViewBindings.findChildViewById(rootView, id);
      if (tpHoraFinal == null) {
        break missingId;
      }

      id = R.id.tp_hora_inicial;
      TimePicker tpHoraInicial = ViewBindings.findChildViewById(rootView, id);
      if (tpHoraInicial == null) {
        break missingId;
      }

      id = R.id.tv_fecha_evento_final;
      TextView tvFechaEventoFinal = ViewBindings.findChildViewById(rootView, id);
      if (tvFechaEventoFinal == null) {
        break missingId;
      }

      id = R.id.tv_fecha_evento_inicial;
      TextView tvFechaEventoInicial = ViewBindings.findChildViewById(rootView, id);
      if (tvFechaEventoInicial == null) {
        break missingId;
      }

      id = R.id.tv_headerText;
      TextView tvHeaderText = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderText == null) {
        break missingId;
      }

      id = R.id.tv_texto_modal_confirmacion;
      TextView tvTextoModalConfirmacion = ViewBindings.findChildViewById(rootView, id);
      if (tvTextoModalConfirmacion == null) {
        break missingId;
      }

      return new ActivityCreateEventBinding((ConstraintLayout) rootView, appBarLayout, btnAceptar,
          btnBackModal, btnCancelar, btnGoBack, btnHoraFinal, btnHoraInicial, btnPrincipalEvento,
          dpFechaFinal, dpFechaInicial, etDescripcion, etNombreEvento, ibCerrarModal, linearLayout4,
          linearLayout6, linearLayout7, llFechaFinal, llFechaInicial, llHoraFinal, llHoraInicial,
          llTipoEvento, swTipoEvento, toolbar, tpHoraFinal, tpHoraInicial, tvFechaEventoFinal,
          tvFechaEventoInicial, tvHeaderText, tvTextoModalConfirmacion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
